# SPDX-FileCopyrightText: no
# SPDX-License-Identifier: CC0-1.0
#
# Configuration for the shell process job.
---

# Warning
# =======
# Run this module only *after* displaymanager module if it exists. Otherwise the displaymanager module will overwrite any changes made here

dontChroot: false

script:

  # Set the default Desktop / Window Manager
  # The order of these checks matters. Since gnome-shell appears with other desktops too, set Gnome as default last and give precedence to other desktops.
  - command: |-2
      BACKGROUND="/usr/share/backgrounds/pexels-dương-nhân-2232979.jpg"
      ACCOUNTS_SERVICE_DIR=/var/lib/AccountsService/users
      SESSION=""
      if pacman -Qq lxqt-session > /dev/null 2>&1 ; then
          SESSION="lxqt"
      elif pacman -Qq lxsession > /dev/null 2>&1 ; then
          SESSION="LXDE"
      elif pacman -Qq mate-session-manager > /dev/null 2>&1 ; then
          SESSION="mate"
      elif pacman -Qq xfce4-session > /dev/null 2>&1 ; then
          SESSION="xfce"
      elif pacman -Qq budgie-desktop > /dev/null 2>&1 ; then
          SESSION="budgie-desktop"
      elif pacman -Qq cinnamon-session > /dev/null 2>&1 ; then
          SESSION="cinnamon"
      elif pacman -Qq plasma-desktop > /dev/null 2>&1 ; then
          SESSION="plasma"
      elif pacman -Qq gnome-shell > /dev/null 2>&1 ; then
          SESSION="gnome"
      fi
      CONTENTS=$(cat <<-EOF
      [org.freedesktop.DisplayManager.AccountsService]
      BackgroundFile="$BACKGROUND"

      [User]
      Language=
      Session="$SESSION"
      XSession="$SESSION"
      Icon=/home/${USER}/.face
      SystemAccount=false
      EOF
      )       
      if [ "$SESSION" -ne "" ]; then
        mkdir -p "$ACCOUNTS_SERVICE_DIR"
        printf "$CONTENTS" > "$ACCOUNTS_SERVICE_DIR"/${USER}
      fi
    timeout: 60

i18n:
    name: "Setting default desktop/window-manager..."
